<?php
// Задание 1. Создание простого массива. Создайте массив с именами нескольких ваших друзей и выведите его на экран. Создайте массив с как минимум 4 именами. Выведите каждое имя на новой строке. Используйте простой массив и цикл foreach для вывода элементов.

// Создание массива с именами
$friends = array("Александр", "Юлия", "Дарья", "Полина", "Елена");

// Вывод результата
foreach ($friends as $friend) {
 echo $friend . "\n";
}
// Задание 2. Индексы массива. Создайте массив чисел и получите значение элемента по индексу. Создайте массив из 5 произвольных чисел. Выведите на экран элемент с индексом 2. Используйте нумерацию индексов массива (индексация начинается с 0).

// Создание массива из 5 произвольных чисел
$numbers = array(5, 6, 3, 9, 2);
// Вывод результата
echo "Элемент с индексом 2: " . $numbers[2] . "\n";

// Задание 3. Ассоциативный массив. Создайте ассоциативный массив, который будет содержать информацию о вашем друге: имя, возраст и город. Создайте массив с ключами name , age и city. Выведите на экран имя и возраст друга. Используйте ассоциативный массив, где ключи — это строковые значения, например, name=> "Иван".

// Создание массива
$friend = array(
  "name" => "Михаил",
  "age" => 45,
  "city" => "Нижний Новгород"
 );
 // Вывод результата
 echo "Имя: " . $friend["name"] . "\n";
 echo "Возраст: " . $friend["age"] . "\n";

// Задание 4. Массивы с циклами. У вас есть массив чисел. Выведите все числа из массива, которые больше 10. Создайте массив из как минимум 5 чисел. Напишите цикл, который выводит на экран только те числа, которые больше 10. Используйте цикл foreach и оператор сравнения >.

// Создание массива
$numbers = array(3, 16, 23, 9, 15, 33);
// Вывод результата
foreach ($numbers as $number) {
 if ($number > 10) {
 echo $number. "\n";
 }
}

// Задание 5. Работа с массивами функций. Создайте массив чисел и посчитайте их сумму. Создайте массив из 5 чисел. Используйте встроенную функцию PHP для нахождения суммы всех чисел. PHP имеет встроенную функцию array_sum() для суммирования элементов массива.

// Создание массива
$numbers = array(3, 7, 23, 8, 12);
// Сумма чисел в массиве
$sum = array_sum($numbers);
// Вывод результата
echo "Сумма всех чисел: " . $sum. "\n";

// Далее представлены задачи повышенной сложности. Достаточно решить 1 из них:

// Задание 8. Поиск дубликатов в массиве. Предположим, у вас есть массив чисел. Вам нужно найти и вывести все повторяющиеся числа.
// 1. Создайте массив с произвольными числами, в котором есть повторяющиеся элементы. 2. Напишите функцию, которая находит все дубликаты в массиве и выводит их.

// Создание массива, в котором есть повторения
$numbers = array(4, 7, 21, 8, 16, 21, 4, 5, 16);
// Функция для поиска дубликатов
function findDuplicat($numbers) {
 $duplicat = array();
 foreach ($numbers as $number) {
 if (isset($duplicat[$number])) {
 $duplicat[$number]++;
 } else {
 $duplicat[$number] = 1;
 }
 }
 foreach ($duplicat as $number => $count) {
 if ($count > 1) {
 echo $number. "\n";
 }
 }
}
// Вывод результата
findDuplicat($numbers);